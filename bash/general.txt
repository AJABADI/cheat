# Template file
* http://serverfault.com/questions/287688/templating-with-linux-in-a-shell-script/699377#699377
source $config_file // with variables param1=10
template=$(cat $template file) // contains "echo $param1"
eval $template


# Using aliases from scropt
shopt -s expand_aliases
source script.sh

# Redirection
x>&y // forward x to y
echo 'Error' 1>&2 // stdout to stderr
1>&2 echo 'Error' // same as before
module avail 2>&1 | less // pipe stderr

# Multi-line string
var="line1\n
line2\n
line3"
cat <<- EOF
line1
line1
EOF


# Show linux version
cat /proc/version
cat /etc/redhat-release

# chmod, chown
-R  // recursively

# loop over stdin
cmd | while read line; do

# services / demons
service NAME COMMAND
  stop
  start
  restart
service --status-all // list all services

# open ports
sudo netstat -tulpn

# File operations
dirname $file
basename $file
readlink -f $file // absolute path; resolve symbolic links
realpath $file  // on MAC; external program

# Arrays
a = (one two three)
${a[0]} // first element
${a[*]} // all elements
${#a[*]}  // length

## Accessing elements of list
1)
l="l1 l2 l3"
a=($l)
echo ${a[i]}
2)
set -- $l
echo $1


# Parameter Expansion
man bash -> Parameter Expansion
${!v*}  // expand variable name
${v:-value} // assign value if undefined
${v:?msg}  // print msg if unset
${file.tar.gz%.*} // file.tar
${file.tar.gz%%.*} // file
${file.tar.gz#*.} // tar.gz
${file.tar.gz##*.} // gz
${#s} // length
${s:from:length}  // substr
${s/pattern/replace}
${s//pattern/replace} // replace all
sadasd


# History expansion
* man bash -> HISTORY EXPANSION
history // last last commands

# Parameter Expansion
man bash -> Parameter Expansion

## Event designator
!id // execute command with id
!!  // last command
!-1 // last command
!-n // n last command
!str  // last command starting with string

## Word designator
EVENT:WORD  // !!:WORD
!!^ // first argument last command
!!$ // last argument last command
!!:n  // nth word
!!:n-$  // nth - end
!!:n*  // nth - end


# Removing first / last line
head -n x   // first x lines
tail -n x   // first x lines
tail -n +x  // everything from line x

# Debugging
set -e  // exit on error
bash -x file.sh // print executed command

# ssh
ssh-genkey
ssh-copy-id host


# File system
mount // show file system
df  // show statistics about file system
fdisk // partitions
diskutil info /Volumns/hdd

# variables
* $0: script name
* $$: process id
* $!: id of last process ran in background
* $?: return value

# color output
GREEN=$(tput setaf 2; tput bold)
YELLOW=$(tput setaf 3)
RED=$(tput setaf 1)
echo -e "$RED Hello world"
