Test command
============
* help: CONDITIONAL EXPRESSIONS
* test -e file == [ -e file ] // $? == 0 if file exists
* if command; then  // if command succeeds than
-z "$v" // zero?
  * check if variable is unset
-n "$v" // non-zero?
  * check if variable is set
-e  // file exists
-f  // file exists
-L // symbolic link exists
-d  // directory exists
-r  // readable
-w  // writeable
-x  // executable

Integer comparison
------------------

-eq // equal
-ne // not equal

String comparision
------------------
s1 == s2 // strings equal
s1 != s2 // strings unequal
s1 == *'s2'* // check if s1 contains s2 -> only with [[ ... ]]
!expr  // not
expr -a expr  // and
expr -o expr  // or

Integer comparision
-------------------
$num1 -ge $num2 // >=
$num1 -gt $num2 // >
$num1 -le $num2 // <=
$num1 -lt $num2 // <

Floating point comparison
-------------------
$num1 -ge $num2 // >=
echo $num1 '>' $num2 | bc -l // returns 1 or 0
if [ $(echo $num1 '>' $num2 | bc -l) -eq 1 ]

Extended test
=============
[[ ... ]]
a == 'test' // works, even if a=
a == *'substring'* // check if a matches substring
expr && expr  // and; a -
expr || expr // or
!expr // not
$s =~ regex // regex matched anyware
  ^regex  // at beginning
  regex$  // at end
  [0-9A-Za-z] // range
  [^a-z]  // not
  . // single character
  ? // single character
  * // multiple characters
