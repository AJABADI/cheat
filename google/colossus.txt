# Colossus
* distributed file system
* stores data in D (disk) file system
* files stored on cluster (collection of servers)
* use cases
  * large amounts of unstructured (not database) data, e.g. video files
  * logging files
  * fast, but append only
* Replaces GFS = Google File System
* CFS / CNS
  CFS = Colossus File System (does not support directories)
  CNS = Colussus Name Service (supports named directories)
* Google File API
/cns/is-d/path/file
  is: cluster with quota
  d: cell in cluster

# fileutil
ls -lp // show parameters
mkdir /path
  %ttl=30d // time to life
  %gc=2h // garbage collection
cp
rm -R // rm -r
snapshot file file_snapshot // copy file with read permissions
rename a b

# gfile
go/gfile-doc
from pyglib import gfile
gfile.GFile // thread safe, slow
gfile.FastGFile // not thread safe, fast

with gfile.GFile(file, 'w') as f:
  data = f.read()
  f.write('Hello')
gfile.Exists(file)
gfile.IsDirectory(dir)
gfile.Remove(file)
gfile.ListDir(path) // directory content as list like os.listdir
gfile.Glob('/dir/*.jpg')
gfile.MkDir(path) // single dir
gfile.MakeDirs(path) // tree of dirs
gfile.Copy(src_path, dst_path, overwrite=True)
.RecursivelyCopyDir(src_path, dst_path, overwrite=False) // copies dir recursively

py_binary {
  deps = [//pyglib, //pyglib:gfile]
  }
