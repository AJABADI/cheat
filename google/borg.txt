borg help
borgcfg [options] cmd
  --vars 'a=1,b=2' // passed to borg file
  up [job_regex] // job_regex like '*tensorboard*' to select jobs
  down
  reload // down + up
  runlocal // run local
borg canceljob --borg=ok [job] // job is name or job id


# Misc
GCU = Google Compute Units (CPU usage unit on sigma)
x = 'hello %%port' // twice %% to mask, escape %
cond(vars.gpu, true, false)


# running multiple tasks
replicas = 5
requirements {
  autopilot = true // uses as many CPU as the task requires
}

# running tasks with different args
replicas = len(task_args.message) // as many tasks as parameters
args {
  message=%message%
}
task_args {
  message = ['a', 'b', 'c']
}


# scheduling
scheduling {
  priority = 119
    * not continuous, but different groups:
    0 - 25
    24 - 119
    120 - 200
    >

# basic job
job hello_word {
  binary = "../../../blaze-bin/research/.../hello_word.par",
  args = {
    in_file = "input.h5",
    out_file = "output.h5"
    }
  runtime = {
    cell = "is"
    }
  requirements {
    cpu = 10,
    gpu = 5,
    ram = 32GB
    }
}
