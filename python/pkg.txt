# General
* https://docs.python.org/2/tutorial/modules.html
* import pkg.module // -> pkg.module.__name__ == module
* python pkg.module // -> pkg.module.__name__ == __main__; run as script
* search paths
  - current directory
  - $PYTHONPATH
  - sys.path
* dir(module) // list names defined by module

# Relative import
sys.insert(0, path.join(path.dirname(path.abspath(__file__)), '../biseq'))


# Package hierarchy
* For structuring modules; avoiding name collisions
* Require __init__.py for being recognized as packages!
* package: contains modules
* modules: contains classes, functions
pkg/
  __init__.py 
    // must exist, but can be empty
    // executed when pkg is imported: import pkg
  __main__.py // optional, run by 'python pkg'
  spkg1/
    __init__.py
    module.py
  spkg2/
    __init__.py
    module.py
  module.py
import pkg.spkg1.module
import pkg.spkg2.module
import pkg.module

# Intra-package references
* https://docs.python.org/2/tutorial/modules.html#intra-package-references
pkg/
  module.py
  spkg1/
    module11.py
    module12.py
  spkg2/
    module21.py
    module22.py

## Implicit import
import module12 // from module11; check 1) spkg1, 2) pkg, 3) sys.path

## Explicit import
from . import module12 // from module11
from .. import spkg1  // import spkg1 from module11
import ..spkg2 module21 // import spkg2.module21 from module11
