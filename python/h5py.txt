# General
http://docs.h5py.org/en/latest/quick.html
Optimized for numpy
pytables (tables) is more abstract (complicated)

# Notation
f: File
g: group
[fg]: File or group

# Write numpy array
f = File('file.h5', 'w')  // use 'a' to append, else overwrite
[fg].create_dataset('/group/dataset', data=array)
f.close()

# Overwrite dataset
if 'd' in f:
  def f['d']
d.create_dataset('d', ...)

# Read array
f = File('file.h5', 'r')
array = [fg]['/group/dataset'].value
f.close()

# Slicing data
d = f['dataset']
d.value // everything
d[i]  // at index i
d[[i, j, k]]  // at indices (increasing order)
d[:k] // every kth
d[[True, False, ...]] // via boolean


# Explore file
f = File('file.h5', 'r')
f.items() // list items
list(f.keys())  // list keys
g = f['/group']
v = g['/item'].value  // read data
g.name  // path
g.keys()  // children
g.get('child')

# open attributes
* r: read-only
* w: overwrite existing file (all groups)
* r+ : read/write; file must exist
* a : read/write; file does not have to exist

# edit file
f = File('file.h5', 'r+')
d = f['dataset']
d[0, 0] = 10
f.close()

# create_dataset
[fg].create_dataset(path, data=array)
d = [fg].create_dataset('d1', (n,m), dtype='i')
d = [fg].create_dataset('d1', data=np.arange(3))
d = f.create_dataset('d1', (10,), dtype=('i4, f4, a10'))  // structured array
d[0] = (1, 1.2, 'Christof')
create_dataset((1e5, 1e5), chunks=(100, 100))
* split dataset into chunks of size (100, 100)
* access by B-tree instead of linear access
* keep chunk size between 10 KB and 1MB
* not everything is loaded into memory
compression='gzip'
maxshape=(None, 100)  // resizeable dataset

# delete dataset
del f['dataset']

# modify dataset
d = f['/data']
d[...] = new_value

# check if dataset exists
f = File(...)
'/data' in f  // True or False

# Attributes
attr = [fg].attr
list(attr.keys) // list attributes
attr['a']  // get value
attr['a'] = 'str'
attr['a'] = 10
attr['a'] = np.arange(10)
